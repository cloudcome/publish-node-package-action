{"version":3,"file":"index.cjs","sources":["../src/index.ts"],"sourcesContent":["import type { Context } from '@actions/github/lib/context';\nimport mapWorkspaces from '@npmcli/map-workspaces';\nimport fs from 'fs';\nimport path from 'path';\n\nexport default async function rewritePkgJSON(cwd: string, context: Context) {\n    // @ref https://github.com/actions/toolkit/blob/457303960f03375db6f033e214b9f90d79c3fe5c/packages/github/src/context.ts\n    const owner = context.payload.repository?.owner.login;\n\n    if (!owner) {\n        throw new Error('No owner found in context');\n    }\n\n    const pkg = JSON.parse(fs.readFileSync(path.join(cwd, '/package.json'), 'utf-8'));\n    const workspaces = await mapWorkspaces({ pkg, cwd });\n\n    Object.values(workspaces).forEach((workspace) => {\n        const file = path.join(workspace, '/package.json');\n        const pkg = JSON.parse(fs.readFileSync(file, 'utf-8'));\n        // originName        ->  underlineName\n        // my-pkg            ->  my-pkg\n        // @my-scope/my-pkg  ->  my-scope__my-pkg\n        const underlineName = pkg.name.replace(/@(.*)\\/(.*)/, '$1__$2');\n\n        pkg.name = '@' + owner + '/' + underlineName;\n        fs.writeFileSync(file, JSON.stringify(pkg), 'utf-8');\n    });\n}\n"],"names":["pkg"],"mappings":";;;;AAK8B,eAAA,eAAe,KAAa,SAAkB;;AAExE,QAAM,SAAQ,aAAQ,QAAQ,eAAhB,mBAA4B,MAAM;AAEhD,MAAI,CAAC,OAAO;AACF,UAAA,IAAI,MAAM,2BAA2B;AAAA,EAC/C;AAEM,QAAA,MAAM,KAAK,MAAM,GAAG,aAAa,KAAK,KAAK,KAAK,eAAe,GAAG,OAAO,CAAC;AAChF,QAAM,aAAa,MAAM,cAAc,EAAE,KAAK,IAAK,CAAA;AAEnD,SAAO,OAAO,UAAU,EAAE,QAAQ,CAAC,cAAc;AAC7C,UAAM,OAAO,KAAK,KAAK,WAAW,eAAe;AACjD,UAAMA,OAAM,KAAK,MAAM,GAAG,aAAa,MAAM,OAAO,CAAC;AAIrD,UAAM,gBAAgBA,KAAI,KAAK,QAAQ,eAAe,QAAQ;AAE9DA,SAAI,OAAO,MAAM,QAAQ,MAAM;AAC/B,OAAG,cAAc,MAAM,KAAK,UAAUA,IAAG,GAAG,OAAO;AAAA,EAAA,CACtD;AACL;;"}